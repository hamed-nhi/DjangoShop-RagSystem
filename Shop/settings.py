"""
Django settings for Shop project.
Generated by 'django-admin startproject' using Django 5.2.
"""
import os
from dotenv import load_dotenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Load environment variables from .env file ---
load_dotenv(os.path.join(BASE_DIR, '.env'))

# --- Security Settings ---
# SECRET_KEY is read from the .env file
SECRET_KEY = os.environ.get('SECRET_KEY')

# DEBUG is read from the .env file. The value will be 'True' or 'False' as a string.
# DEBUG = os.environ.get('DEBUG') == 'False'
# DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'
DEBUG = True

ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['*']


# --- Application definition ---

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.main.apps.MainConfig',
    'apps.accounts.apps.AccountsConfig',
    'apps.products.apps.ProductsConfig',
    'apps.orders.apps.OrdersConfig',
    'django_admin_listfilter_dropdown',
    'ckeditor',
    'ckeditor_uploader',
    'django_render_partial',
    'django.contrib.humanize',
    'django_filters',
    'apps.discounts.apps.DiscountsConfig',
    'apps.warehouses.apps.WarehousesConfig',
    'apps.c_s_f.apps.CSFConfig',
    'apps.search.apps.SearchConfig',
    'jalali_date',
    'apps.ai_assistant.apps.AiAssistantConfig',
    
]

SILENCED_SYSTEM_CHECKS = ['ckeditor.W001']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "middlewares.middlewares.RequestMiddleware",  # Custom middleware to store the current request
]

ROOT_URLCONF = 'Shop.urls'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates/")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'apps.main.views.media_admin',
                'apps.products.views.navbar_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'Shop.wsgi.application'

# --- Database Settings ---
# Credentials are read from the .env file
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT'),
        'OPTIONS': {
            'options': '-c search_path=EShop_DB_P',
            'connect_timeout': 5,
        },
    }
}


# --- Password validation ---
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# --- Internationalization ---
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = False

# --- Static and Media Files ---
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# --- CKEditor Settings ---
CKEDITOR_UPLOAD_PATH ='images/ckeditor/upload_files/'
CKEDITOR_ALLOW_NONIMAGE_FILES=False
CKEDITOR_STORAGE_BACKEND = 'django.core.files.storage.FileSystemStorage'

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono-lisa',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_Full': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'Preview', 'Print']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'styles', 'items': ['Format', 'Font', 'FontSize']},
            {'name': 'basicstyles', 'items': ['Bold', 'Italic', 'Underline', 'Strike', '-', 'RemoveFormat']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'paragraph', 'items': [
                'NumberedList', 'BulletedList', '-', 
                'Outdent', 'Indent', '-', 
                'Blockquote', '-', 
                'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock',
                '-', 'BidiLtr', 'BidiRtl'
            ]},
            {'name': 'insert', 'items': ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'tools', 'items': ['Maximize']},
        ],
        'toolbar': 'Full',
        'height': 300,
        'width': '100%',
        'extraPlugins': ','.join([
            'uploadimage',
            'filetools',
            'autogrow',
            'justify',
            'bidi',
        ]),
        'removePlugins': 'exportpdf,resize',
        'autoGrow_minHeight': 300,
        'autoGrow_maxHeight': 600,
        'allowedContent': True,
        'language': 'fa',
    }
}


# --- Default primary key and User Model ---
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'accounts.CustomUser'
